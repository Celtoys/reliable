DONE

    Implement RTT estimate

    Create stats program to test it.

    Add prints for smoothed rtt

    Can't do jitter estimate because we don't include time in sent packets.

    Jitter estimate needs to be done at some level above reliable.io, where we know the time value per-packet.

    Implement packet loss estimate and smooth it.

    RTT estimate is not smooth. Make it better be only considering RTT on packets that are subsequent receives, eg. try to avoid dropped packets affecting the RTT estimate.

    Various fixes for linux, windows etc.

    All done. Ready for 1.0 release!

    Added bandwidth stats, eg. sent bandwidth, received bandwidth and acked bandwidth per-endpoint.

    Added support for negative timeout values = disabling timeout.

    Added OnServerClientConnected and OnServerClientDisconnected callbacks in adapter.

    Add code to client and server to get address, and make sure to get the bound port from the socket (eg. via netcode.io)

    Fix the matcher to use the updated version of golang netcode.io, once the new repo is setup and restructured, *or* break the dependency.

TODO

    There is something wrong with stress test. 64 clients not connecting to server properly. Something wrong with timeouts again?

    Need to extend unit tests for yojimbo to include client connect, disconnect and reconnect, as well as multiple clients.

    Adjust interface in combination with netcode.io to eliminate buffer copies when reading and writing packets.
